version: '3'
services:
  nginx-certbot:
    build: .
    container_name: nginx-certbot
    env_file: .env
    image: rabbotio/nginx-certbot
    restart: on-failure
    volumes:
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
      - ./etc/ssl/dhparams.pem:/etc/ssl/dhparams.pem
      - ./var/www/html:/var/www/html
      - ./root:/root
    links:
      - nginx
      - certbot
    command:
      # - docker run certbot/certbot:latest certonly --dry-run --email "$CERTBOT_EMAIL" -n --webroot -w $ACME_WWWROOT -d $DOMAIN -d www.$DOMAIN
      - "init.sh"

  nginx:
    image: nginx:alpine
    container_name: nginx
    env_file: .env
    restart: on-failure
    networks:
      - back
    volumes:
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
      - ./etc/ssl/dhparams.pem:/etc/ssl/dhparams.pem
      - ./var/www/html:/var/www/html
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    env_file: .env
    restart: on-failure
    environment:
      - DOMAIN=$DOMAIN
      - CERTBOT_EMAIL=$CERTBOT_EMAIL
      - ACME_WWWROOT=${ACME_WWWROOT:-/var/www/html}
    networks:
      - back
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./var/log/letsencrypt:/var/log/letsencrypt

networks:
  back:
